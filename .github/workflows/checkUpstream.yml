#######################################################
# Check dockerhub for updates to the tomcat container #
#######################################################

name: Check For Upstream Updates

on:
  schedule:
    # Once a day at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:

  checkUpstream:
    runs-on: ubuntu-latest

    steps:
    - name: Set environment variables
      run: |
        echo "scriptsdir=.github/helperScripts" >> $GITHUB_ENV

    - name: Checkout default branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Verify repo has been cloned
      run: |
        git status
        git branch -a
        git remote -v

    - name: Grab the most recent upstream version
      run: |
        echo $(${{ env.scriptsdir }}/dockertags.sh rockylinux | grep -v "latest" | sort -Vr)
        upstream=$( ${{ env.scriptsdir }}/dockertags.sh rockylinux | grep -v "latest" | sort -Vr | head -n1)
        echo $upstream
        echo "upstream=$upstream" >> $GITHUB_ENV

    - name: Check if up to date
      run: |
        echo Latest upstream version: ${{ env.upstream }}
        git branch --list "${{ env.upstream }}" | head -c1 | wc -c
        test $(git branch --list "${{ env.upstream }}" | head -c1 | wc -c) -ne 0 &&
        up2date=true || up2date=false
        echo "Up to date with latest version (${{ env.upstream }})?
        echo $up2date
        echo "up2date=$up2date" >> $GITHUB_ENV

    - name: Already up to date
      if: ${{ env.up2date }}
      run: |
        echo "Already up to date with upstream: ${{ env.upstream }}"

    - name: Updating to newest version
      if: ${{ !env.up2date }}
        echo "New upstream version ${{ env.upstream }}"
        current=$(git branch -r | grep -v "latest" | sort -Vr | head -n1)
        echo "Most recent unidata/rockylinux version: $current"
        git checkout -b ${{ env.upstream }} $current
        git status
        sed -e "s/from rockylinux:.*/from rockylinux:${{ env.upstream }}/g" Dockerfile -i
        cat Dockerfile
        git config --global user.name 'Github Actions'
        git config --global user.email 'respinoza@ucar.edu'
        git add . && git commit -m "Update to rockylinux:${{ env.upstream }}" &&
        git push origin ${{ env.upstream }}
        }
